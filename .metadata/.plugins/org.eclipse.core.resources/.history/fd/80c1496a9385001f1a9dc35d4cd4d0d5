package Caching_Example;

import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;
import org.hibernate.criterion.Restrictions;

import HQL_Query.paginationTable;


//First level cache by default enable 

public class First_Level_Cache {
public static void main(String[] args) {
	SessionFactory sf = new Configuration().configure().buildSessionFactory();
	Session s=sf.openSession();
	
	
//	how we are proving the first level query 
//	i will get data which is having id as 12--for this it will fire query 
	paginationTable list = s.get(paginationTable.class, 12);
	System.out.println(list);
	
	paginationTable list2 = s.get(paginationTable.class, 12);
	System.out.println(list2);
	
	
//	Query q=s.createQuery("from paginationTable where id=:x");
//	 Criteria q = s.createCriteria(paginationTable.class);
//	 q.add(Restrictions.eq("id", 11));
//	System.out.println(q.list());
//	
//	 Criteria q2 = s.createCriteria(paginationTable.class);
//	 q2.add(Restrictions.eq("id", 11));
//	System.out.println(q2.list());
	
	
//	Query q=s.createQuery("from paginationTable where id=:x");
//	q.setParameter("x", 12);
//	System.out.println(q.list());
//	
//	Query q1=s.createQuery("from paginationTable where id=:x");
//	q1.setParameter("x", 12);
//	System.out.println(q1.list());

	
	s.close();
}
}
