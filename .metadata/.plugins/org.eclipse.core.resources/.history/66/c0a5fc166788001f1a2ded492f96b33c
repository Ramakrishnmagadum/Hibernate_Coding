package onDelete_Method;

import java.io.Serializable;

import org.hibernate.EmptyInterceptor;
import org.hibernate.type.Type;

public class OnDelete_Interceptor extends EmptyInterceptor {

//	The onDelete() method in Hibernate Interceptors is another important hook that allows you to intercept the deletion of entities from the database
//	this method will called ,before deleting entities 
//	why we used this method ---before deleting any entity , some conditions wanted cehck and those conditions are statisfied then it wont allow to delete this Entity
	
	@Override
	public void onDelete(Object entity, Serializable id, Object[] state, String[] propertyNames, Type[] types) {
		// TODO Auto-generated method stub
		super.onDelete(entity, id, state, propertyNames, types);
	}
	
//	--------- Parameters  -----------
//	entity       : The entity instance that is being deleted.
//	id           : The identifier (primary key) of the entity that is being deleted.
//	currentState : An array representing the current state of the entity before deletion. This can provide context about the entity's properties.
//	propertyNames: An array of the names of the properties in the entity. This can help identify which properties correspond to the values in currentState.
}
